name: apksign-docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch: 

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io



jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      
      # Setup build environment
      #
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Checkout repository source code
      #    
      - name: Checkout repository
        uses: actions/checkout@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            # set latest suffix in connection with branch
            type=ref,event=branch,suffix=-latest
            # set version from git tag
            type=semver,pattern={{version}}
            # set latest suffix in connection with version
            type=semver,pattern={{major}}.{{minor}},suffix=-latest
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.author=${{ github.repository_owner }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5 # v5.0.0
        with:
          context: .
          build-args: |
            DISTRO=bookworm
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

